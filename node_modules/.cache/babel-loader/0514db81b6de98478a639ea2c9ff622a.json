{"ast":null,"code":"var _jsxFileName = \"/Users/sumitroy/Desktop/ReactTutorial/landing-page-practise/src/components/FormCard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\"; // import Grid from \"@material-ui/core/Grid\";\n// import TextField from \"@material-ui/core/TextField\";\n// import FormControlLabel from \"@material-ui/core/FormControlLabel\";\n// import FormControl from \"@material-ui/core/FormControl\";\n// import FormLabel from \"@material-ui/core/FormLabel\";\n// import RadioGroup from \"@material-ui/core/RadioGroup\";\n// import Radio from \"@material-ui/core/Radio\";\n// import Select from \"@material-ui/core/Select\";\n// import MenuItem from \"@material-ui/core/MenuItem\";\n// import Slider from \"@material-ui/core/Slider\";\n// import Button from \"@material-ui/core/Button\";\n// import Box from '@mui/material/Box';\n// import TextField from '@mui/material/TextField';\n\nimport { Form, Button, FormGroup, FormControl, ControlLabel, Row, Col } from \"react-bootstrap\";\nimport { makeStyles } from \"@material-ui/core/styles\"; // const useStyles = makeStyles((theme) => ({\n// }));\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function FormCard() {\n  _s();\n\n  // const classes = useStyles();\n  const [email, setEmail] = useState(\"\");\n  const [contact, setContact] = useState(\"\");\n  const [fullName, setFullName] = useState(\"\");\n  const [onePunchLiner, setOnePunchLiner] = useState(\"\");\n  const [story, setStory] = useState(\"\");\n  const [designSample, setDesignSample] = useState(\"\");\n\n  const submit = e => {\n    e.preventDefault();\n\n    if (!email || !contact || !fullName) {\n      alert(\"Full name or email or contact cannot be blank\");\n    } else {\n      // addTodo(title, desc);\n      setEmail(\"\");\n      setContact(\"\");\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Form, {\n    children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n      className: \"mb-3\",\n      controlId: \"formBasicName\",\n      children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n        children: \"Full Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n        type: \"text\",\n        placeholder: \"Enter email\",\n        value: fullName,\n        onChange: e => {\n          setFullName(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n      className: \"mb-3\",\n      controlId: \"formBasicEmail\",\n      children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n        children: \"Email address\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n        type: \"email\",\n        placeholder: \"Enter email\",\n        value: email,\n        onChange: e => {\n          setEmail(e.target.value);\n        },\n        required: true,\n        isInvalid: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n        type: \"invalid\",\n        children: \"Please enter valid email.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n      className: \"mb-3\",\n      controlId: \"formBasicPassword\",\n      children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n        children: \"Contact Number\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n        type: \"text\",\n        placeholder: \"Enter contact number\",\n        value: contact,\n        onChange: e => {\n          setContact(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n      controlId: \"formFile\",\n      className: \"mb-3\",\n      children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n        children: \"Design sample\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n        type: \"file\",\n        placeholder: \"Upload Design Sample\",\n        value: designSample,\n        onChange: e => {\n          setDesignSample(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"primary\",\n      type: \"submit\",\n      onClick: submit,\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n}\n\n_s(FormCard, \"sisGHdODoctn7DmB6T2xnAiP8gg=\");\n\n_c = FormCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"FormCard\");","map":{"version":3,"sources":["/Users/sumitroy/Desktop/ReactTutorial/landing-page-practise/src/components/FormCard.js"],"names":["React","useState","Form","Button","FormGroup","FormControl","ControlLabel","Row","Col","makeStyles","FormCard","email","setEmail","contact","setContact","fullName","setFullName","onePunchLiner","setOnePunchLiner","story","setStory","designSample","setDesignSample","submit","e","preventDefault","alert","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\n// import Grid from \"@material-ui/core/Grid\";\n// import TextField from \"@material-ui/core/TextField\";\n// import FormControlLabel from \"@material-ui/core/FormControlLabel\";\n// import FormControl from \"@material-ui/core/FormControl\";\n// import FormLabel from \"@material-ui/core/FormLabel\";\n// import RadioGroup from \"@material-ui/core/RadioGroup\";\n// import Radio from \"@material-ui/core/Radio\";\n// import Select from \"@material-ui/core/Select\";\n// import MenuItem from \"@material-ui/core/MenuItem\";\n// import Slider from \"@material-ui/core/Slider\";\n// import Button from \"@material-ui/core/Button\";\n// import Box from '@mui/material/Box';\n// import TextField from '@mui/material/TextField';\nimport {\n  Form,\n  Button,\n  FormGroup,\n  FormControl,\n  ControlLabel,\n  Row,\n  Col,\n} from \"react-bootstrap\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\n// const useStyles = makeStyles((theme) => ({\n\n// }));\n\nexport default function FormCard() {\n  // const classes = useStyles();\n\n  const [email, setEmail] = useState(\"\");\n  const [contact, setContact] = useState(\"\");\n  const [fullName, setFullName] = useState(\"\");\n  const [onePunchLiner, setOnePunchLiner] = useState(\"\");\n  const [story, setStory] = useState(\"\");\n  const [designSample, setDesignSample] = useState(\"\");\n  const submit = (e) => {\n    e.preventDefault();\n    if (!email || !contact || !fullName) {\n      alert(\"Full name or email or contact cannot be blank\");\n    } else {\n      // addTodo(title, desc);\n      setEmail(\"\");\n      setContact(\"\");\n    }\n  };\n  return (\n    <Form>\n      <Form.Group className=\"mb-3\" controlId=\"formBasicName\">\n        <Form.Label>Full Name</Form.Label>\n        <Form.Control\n          type=\"text\"\n          placeholder=\"Enter email\"\n          value={fullName}\n          onChange={(e) => {\n            setFullName(e.target.value);\n          }}\n        />\n      </Form.Group>\n      <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n        <Form.Label>Email address</Form.Label>\n        <Form.Control\n          type=\"email\"\n          placeholder=\"Enter email\"\n          value={email}\n          onChange={(e) => {\n            setEmail(e.target.value);\n          }}\n          required\n          isInvalid\n        />\n        <Form.Control.Feedback type=\"invalid\">\n          Please enter valid email.\n        </Form.Control.Feedback>\n        {/* <Form.Text className=\"text-muted\">\n          We'll never share your email with anyone else.\n        </Form.Text> */}\n      </Form.Group>\n\n      <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\n        <Form.Label>Contact Number</Form.Label>\n        <Form.Control\n          type=\"text\"\n          placeholder=\"Enter contact number\"\n          value={contact}\n          onChange={(e) => {\n            setContact(e.target.value);\n          }}\n        />\n      </Form.Group>\n      <Form.Group controlId=\"formFile\" className=\"mb-3\">\n        <Form.Label>Design sample</Form.Label>\n        <Form.Control\n          type=\"file\"\n          placeholder=\"Upload Design Sample\"\n          value={designSample}\n          onChange={(e) => {\n            setDesignSample(e.target.value);\n          }}\n        />\n      </Form.Group>\n      <Button variant=\"primary\" type=\"submit\" onClick={submit}>\n        Submit\n      </Button>\n    </Form>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}