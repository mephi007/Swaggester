{"ast":null,"code":"var _jsxFileName = \"/Users/sumitroy/Desktop/Swaggster/src/components/FormCard.js\";\nimport React, { useState, useRef } from \"react\";\nimport { Form, Button } from \"react-bootstrap\";\nimport emailjs from \"emailjs-com\"; // const useStyles = makeStyles((theme) => ({\n// }));\n\nexport default function FormCard() {\n  // const classes = useStyles();\n  const form = useRef();\n  const [fullName, setFullName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [contact, setContact] = useState(\"\");\n  const [onePunchLiner, setOnePunchLiner] = useState(\"\");\n  const [story, setStory] = useState(\"\");\n  const [designSample, setDesignSample] = useState(\"\"); // emailjs.init(\"my_user_id\");\n\n  const submit = e => {\n    e.preventDefault();\n\n    if (!email || !contact || !fullName) {\n      alert(\"Full name or email or contact cannot be blank\");\n    } else {\n      // send email\n      console.log(\"e.target: \", e.target);\n      emailjs.sendForm(\"service_etap816\", \"template_g1du8yk\", e.target, \"user_2E4a0YzqAcVcwP6qAhO9C\").then(result => {\n        console.log(result.text);\n      }, error => {\n        console.log(error.text);\n      }); // back to default\n\n      setEmail(\"\");\n      setContact(\"\");\n      setFullName(\"\");\n      setOnePunchLiner(\"\");\n      setStory(\"\");\n      setDesignSample(\"\");\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Form, {\n    ref: form,\n    onSubmit: e => submit(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    className: \"mb-4\",\n    controlId: \"formBasicName\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }, \"Full Name\"), /*#__PURE__*/React.createElement(Form.Control, {\n    name: \"fullName\",\n    type: \"text\",\n    placeholder: \"Enter email\",\n    value: fullName,\n    onChange: e => {\n      setFullName(e.target.value);\n    },\n    required: true,\n    size: \"lg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Form.Group, {\n    className: \"mb-4\",\n    controlId: \"formBasicEmail\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    size: \"lg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  }, \"Email address\"), /*#__PURE__*/React.createElement(Form.Control, {\n    name: \"email\",\n    type: \"email\",\n    placeholder: \"Enter email\",\n    value: email,\n    onChange: e => {\n      setEmail(e.target.value);\n    },\n    required: true,\n    size: \"lg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Form.Control.Feedback, {\n    type: \"invalid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }\n  }, \"Please enter valid email.\")), /*#__PURE__*/React.createElement(Form.Group, {\n    className: \"mb-4\",\n    controlId: \"formBasicContact\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    size: \"lg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }\n  }, \"Contact Number\"), /*#__PURE__*/React.createElement(Form.Control, {\n    name: \"contact\",\n    type: \"text\",\n    placeholder: \"Enter contact number\",\n    value: contact,\n    onChange: e => {\n      setContact(e.target.value);\n    },\n    required: true,\n    size: \"lg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Form.Group, {\n    className: \"mb-4\",\n    controlId: \"formBasicOnePunchLiner\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }\n  }, \"One Punch Line\"), /*#__PURE__*/React.createElement(Form.Control, {\n    name: \"onePunchLiner\",\n    type: \"text\",\n    placeholder: \"Enter your awesome funny one punch liner\",\n    value: onePunchLiner,\n    onChange: e => {\n      setOnePunchLiner(e.target.value);\n    },\n    required: true,\n    size: \"lg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Form.Group, {\n    className: \"mb-4\",\n    controlId: \"formBasicStrotyTextArea\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 9\n    }\n  }, \"Story behind your one punch liner\"), /*#__PURE__*/React.createElement(Form.Control, {\n    name: \"story\",\n    as: \"textarea\",\n    rows: 3,\n    placeholder: \"Enter the story behind your great one punch liner\",\n    value: story,\n    onChange: e => {\n      setStory(e.target.value);\n    },\n    size: \"lg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"formBasicStory\",\n    className: \"mb-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 9\n    }\n  }, \"Design sample\"), /*#__PURE__*/React.createElement(Form.Control, {\n    name: \"designSample\",\n    type: \"file\",\n    placeholder: \"Upload Design Sample\",\n    value: designSample,\n    onChange: e => {\n      setDesignSample(e.target.value);\n    },\n    size: \"lg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    className: \"btn btn-sm btn-success\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }\n  }, \"Interested !!\"));\n}","map":{"version":3,"sources":["/Users/sumitroy/Desktop/Swaggster/src/components/FormCard.js"],"names":["React","useState","useRef","Form","Button","emailjs","FormCard","form","fullName","setFullName","email","setEmail","contact","setContact","onePunchLiner","setOnePunchLiner","story","setStory","designSample","setDesignSample","submit","e","preventDefault","alert","console","log","target","sendForm","then","result","text","error","value"],"mappings":"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","sourcesContent":["import React, { useState, useRef } from \"react\";\nimport { Form, Button } from \"react-bootstrap\";\nimport emailjs from \"emailjs-com\";\n\n// const useStyles = makeStyles((theme) => ({\n\n// }));\n\nexport default function FormCard() {\n  // const classes = useStyles();\n  const form = useRef();\n  const [fullName, setFullName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [contact, setContact] = useState(\"\");\n  const [onePunchLiner, setOnePunchLiner] = useState(\"\");\n  const [story, setStory] = useState(\"\");\n  const [designSample, setDesignSample] = useState(\"\");\n  // emailjs.init(\"my_user_id\");\n  const submit = (e) => {\n    e.preventDefault();\n    if (!email || !contact || !fullName) {\n      alert(\"Full name or email or contact cannot be blank\");\n    } else {\n      // send email\n      console.log(\"e.target: \", e.target)\n      emailjs\n        .sendForm(\n          \"service_etap816\",\n          \"template_g1du8yk\",\n          e.target, \n          \"user_2E4a0YzqAcVcwP6qAhO9C\"\n        )\n        .then(\n          (result) => {\n            console.log(result.text);\n          },\n          (error) => {\n            console.log(error.text);\n          }\n        );\n\n      // back to default\n      setEmail(\"\");\n      setContact(\"\");\n      setFullName(\"\");\n      setOnePunchLiner(\"\");\n      setStory(\"\");\n      setDesignSample(\"\");\n    }\n  };\n  return (\n    <Form ref={form} onSubmit={(e) => submit(e)}>\n      <Form.Group className=\"mb-4\" controlId=\"formBasicName\">\n        <Form.Label>Full Name</Form.Label>\n        <Form.Control\n          name = \"fullName\"\n          type=\"text\"\n          placeholder=\"Enter email\"\n          value={fullName}\n          onChange={(e) => {\n            setFullName(e.target.value);\n          }}\n          required\n          size=\"lg\"\n        />\n      </Form.Group>\n      <Form.Group className=\"mb-4\" controlId=\"formBasicEmail\">\n        <Form.Label size=\"lg\">Email address</Form.Label>\n        <Form.Control\n          name=\"email\"\n          type=\"email\"\n          placeholder=\"Enter email\"\n          value={email}\n          onChange={(e) => {\n            setEmail(e.target.value);\n          }}\n          required\n          size=\"lg\"\n        />\n        <Form.Control.Feedback type=\"invalid\">\n          Please enter valid email.\n        </Form.Control.Feedback>\n        {/* <Form.Text className=\"text-muted\">\n          We'll never share your email with anyone else.\n        </Form.Text> */}\n      </Form.Group>\n\n      <Form.Group className=\"mb-4\" controlId=\"formBasicContact\">\n        <Form.Label size=\"lg\">Contact Number</Form.Label>\n        <Form.Control\n          name=\"contact\"\n          type=\"text\"\n          placeholder=\"Enter contact number\"\n          value={contact}\n          onChange={(e) => {\n            setContact(e.target.value);\n          }}\n          required\n          size=\"lg\"\n        />\n      </Form.Group>\n      <Form.Group className=\"mb-4\" controlId=\"formBasicOnePunchLiner\">\n        <Form.Label>One Punch Line</Form.Label>\n        <Form.Control\n          name=\"onePunchLiner\"\n          type=\"text\"\n          placeholder=\"Enter your awesome funny one punch liner\"\n          value={onePunchLiner}\n          onChange={(e) => {\n            setOnePunchLiner(e.target.value);\n          }}\n          required\n          size=\"lg\"\n        />\n      </Form.Group>\n      <Form.Group className=\"mb-4\" controlId=\"formBasicStrotyTextArea\">\n        <Form.Label>Story behind your one punch liner</Form.Label>\n        <Form.Control\n          name=\"story\"\n          as=\"textarea\"\n          rows={3}\n          placeholder=\"Enter the story behind your great one punch liner\"\n          value={story}\n          onChange={(e) => {\n            setStory(e.target.value);\n          }}\n          size=\"lg\"\n        />\n      </Form.Group>\n      <Form.Group controlId=\"formBasicStory\" className=\"mb-4\">\n        <Form.Label>Design sample</Form.Label>\n        <Form.Control\n          name=\"designSample\"\n          type=\"file\"\n          placeholder=\"Upload Design Sample\"\n          value={designSample}\n          onChange={(e) => {\n            setDesignSample(e.target.value);\n          }}\n          size=\"lg\"\n        />\n      </Form.Group>\n      <Button type=\"submit\" className=\"btn btn-sm btn-success\">\n        Interested !!\n      </Button>\n    </Form>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}